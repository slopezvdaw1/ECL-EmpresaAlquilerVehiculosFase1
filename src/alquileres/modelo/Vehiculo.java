package alquileres.modelo;

/**
 * Representa a un veh√≠culo en alquiler
 * De esta clase no se crear√°n instancias
 * 
 * De un veh√≠culo se conoce su matr√≠cula, marca, modelo y el precio a pagar por
 * d√≠a de alquiler
 * 
 * Para todo veh√≠culo se puede calcular su coste de alquiler que depende del n¬∫
 * de d√≠as que se alquile (llamaremos a esta operaci√≥n calcularPrecioAlquiler() )
 * 
 * Dos veh√≠culos pueden compararse por su matr√≠cula (es su orden natural)
 * 
 * Dos veh√≠culos son iguales si adem√°s de pertenecer a la misma clase tienen la
 * misma matr√≠cula
 * @author - Sara LÛpez Vicente
 */
public abstract class Vehiculo implements Comparable<Vehiculo>{
	private String matricula;
	private String marca;
	private String modelo;
	private double precioDia;

	/**
	 * Constructor
	 */
	public Vehiculo(String matricula, String marca, String modelo,
	        double precioDia) {
		this.matricula = matricula.toUpperCase();
		this.marca = marca.toUpperCase();
		this.modelo = modelo.toUpperCase();
		this.precioDia = precioDia;

	}
	
	

	public String getMatricula() {
		return matricula;
	}



	public void setMatricula(String matricula) {
		this.matricula = matricula;
	}



	public String getMarca() {
		return marca;
	}



	public void setMarca(String marca) {
		this.marca = marca;
	}



	public String getModelo() {
		return modelo;
	}



	public void setModelo(String modelo) {
		this.modelo = modelo;
	}



	public double getPrecioDia() {
		return precioDia;
	}



	public void setPrecioDia(double precioDia) {
		this.precioDia = precioDia;
	}

	public double calcularPrecioAlquiler(int dias) {
		return precioDia * dias;
	}

	@Override
	public boolean equals(Object obj) {

		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (this.getClass() != obj.getClass()) {
			return false;
		}
		Vehiculo v = (Vehiculo) obj;
		return v.getMatricula().equals(this.matricula);

	}
	
	public String toString() {
		return this.getClass().getSimpleName() + "\nMatrÌcula: " + matricula +
				"\t|\tMarca: " + marca + "\t|\tModelo: " + modelo +
				"\nPrecio dÌa alquiler: " + precioDia + "Ä";
	}
	
	/**
	 * Redefinici√≥n de hashCode()
	 * 
	 */
	@Override
	public int hashCode() {
		return matricula.hashCode() * 13;
	}
	
	@Override
	public int compareTo(Vehiculo otro) {
		return this.matricula.compareTo(otro.getMatricula());
	}
	
}